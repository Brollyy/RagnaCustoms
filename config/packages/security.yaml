security:
    #enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

#    encoders:
#        App\Entity\Utilisateur:
#            algorithm: auto
    role_hierarchy:
        ROLE_ADMIN: ROLE_MODERATOR
        ROLE_MODERATOR: ROLE_PREMIUM_LVL3
        ROLE_PREMIUM_LVL3: ROLE_PREMIUM_LVL2
        ROLE_PREMIUM_LVL2: ROLE_PREMIUM_LVL1
        ROLE_PREMIUM_LVL1: ROLE_USER

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: username
    firewalls:
        login:
            pattern: ^/rest-api/login
            stateless: true
            json_login:
                check_path: /rest-api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/rest-api
            stateless: true
            jwt: ~
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            switch_user: { role: ROLE_ADMIN }
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
        # by default, the feature is enabled by checking a
        # checkbox in the login form (see below), uncomment the
        # following line to always enable it.
                #always_remember_me: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/rest-api/login, roles: PUBLIC_ACCESS }
        - { path: ^/rest-api/login_check, roles: PUBLIC_ACCESS }
        - { path: ^/rest-api/public, roles: PUBLIC_ACCESS }
        - { path: ^/api/doc,       roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/song,       roles: PUBLIC_ACCESS }
        - { path: ^/rest-api$,       roles: PUBLIC_ACCESS }
        - { path: ^/rest-api,       roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: ROLE_MODERATOR }
        - { path: ^/ranking-song/, roles: ROLE_MODERATOR }
        - { path: ^/user/downloads, roles: ROLE_USER }
        - { path: ^/playlists, roles: ROLE_USER }
        - { path: ^/recently-played, roles: ROLE_USER }
